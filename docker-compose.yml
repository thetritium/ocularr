version: '3.8'

services:
  db:
    image: postgres:15
    container_name: ocularr-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ocularr-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: ocularr-backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      JWT_SECRET: ${JWT_SECRET}
      TMDB_API_KEY: ${TMDB_API_KEY}
    volumes:
      # Fix: Map host uploads to the correct container path
      - ./backend/uploads:/app/uploads
    networks:
      - ocularr-network
    # Expose backend port for frontend to access
    ports:
      - "3001:3001"

  frontend:
    build: ./frontend
    container_name: ocularr-frontend
    depends_on:
      - backend
    environment:
      # Add backend URL for production
      REACT_APP_API_URL: http://localhost:3001
    ports:
      - "${APP_PORT}:80"
    networks:
      - ocularr-network

networks:
  ocularr-network:
    driver: bridge

volumes:
  postgres_data: